apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  - "./oauth2proxy"
  - "./keycloak"
  - "./istio"
  - "./postgres"
  - "./platform-gateway.yaml"
  - "./argocd"
  - "./coredns-cm.yaml"
patches:
  - path: "connection-checker.yaml"
    target:
      kind: Deployment
      annotationSelector: "await=service"
  - path: "connection-checker.yaml"
    target:
      kind: Job
      annotationSelector: "await=service"
helmCharts:
- name: base
  namespace: istio-system
  releaseName: istio-base
  repo: https://istio-release.storage.googleapis.com/charts
  version: ~1.20.1
  includeCRDs: true
  valuesInline:
    defaultRevision: default
- name: istiod
  namespace: istio-system
  releaseName: istiod
  repo: https://istio-release.storage.googleapis.com/charts
  version: ~1.20.1
  valuesInline:
    pilot:
      configMap: false
- name: gateway
  namespace: istio-system
  releaseName: istio-gateway
  repo: https://istio-release.storage.googleapis.com/charts
  version: ~1.20.1
  valuesInline:
    service:
      # Type of service. Set to "None" to disable the service entirely
      # type: LoadBalancer
- name: oauth2-proxy
  namespace: oauth2-proxy
  releaseName: oauth2-proxy
  repo: https://charts.bitnami.com/bitnami
  version: ~3.4.2
  valuesInline:
    configuration:
      existingSecret: "oauth2-proxy-secret"
      existingConfigmap: "oauth2-proxy-cm"
    redis:
      enabled: true
      architecture: "standalone"
      master:
        service:
          port: 6379
      replica:
        replicaCount: 1
      auth:
        enabled: true
        existingSecret: "oauth2-proxy-redis-secret"
        existingSecretPasswordKey: "redis-secret"
- name: argo-cd
  namespace: argocd
  releaseName: argocd
  repo: https://argoproj.github.io/argo-helm
  version: 5.52.0
  valuesInline:
    configs:
      cm:
        url: https://argocd.platform.local
        admin.enabled: "false"
        oidc.config: |
          name: keycloak
          issuer: https://kc.platform.local/realms/master
          clientID: argocd
          clientSecret: $oidc.keycloak.clientSecret
          requestedScopes: ["openid", "profile", "email", "groups"]
        oidc.tls.insecure.skip.verify: "true"
        kustomize.buildOptions: --enable-helm
        application.resourceTrackingMethod: annotation
      rbac:
        policy.csv: |
          g, argocd-admin, role:admin
          g, argocd-viewer, role:readonly
      params:
        server.insecure: true
      secret:
        createSecret: false
    dex:
      enabled: false
    